#test calc_complements_1
matrix_t A;
matrix_t C;
s21_create_matrix(2, 3, &A);
int err = s21_calc_complements(&A, &C);
ck_assert_int_eq(err, CALCULATION_ERROR);
s21_remove_matrix(&A);
s21_remove_matrix(&C);

#test calc_complements_2
matrix_t A;
matrix_t C;
s21_create_matrix(1, 1, &A);
**A.matrix = 25;
int err = s21_calc_complements(&A, &C);
ck_assert_int_eq(err, OK);
ck_assert_double_eq(**C.matrix, 1);
s21_remove_matrix(&A);
s21_remove_matrix(&C);

#test calc_complements_3
matrix_t A;
matrix_t C;
s21_create_matrix(3, 3, &A);
A.matrix[0][0] = 1;
A.matrix[0][1] = 2;
A.matrix[0][2] = 3;
A.matrix[1][0] = 0;
A.matrix[1][1] = 4;
A.matrix[1][2] = 2;
A.matrix[2][0] = 5;
A.matrix[2][1] = 2;
A.matrix[2][2] = 1;
int err = s21_calc_complements(&A, &C);
ck_assert_int_eq(err, OK);
ck_assert_double_eq(C.matrix[0][0], 0);
ck_assert_double_eq(C.matrix[0][1], 10);
ck_assert_double_eq(C.matrix[0][2], -20);
ck_assert_double_eq(C.matrix[1][0], 4);
ck_assert_double_eq(C.matrix[1][1], -14);
ck_assert_double_eq(C.matrix[1][2], 8);
ck_assert_double_eq(C.matrix[2][0], -8);
ck_assert_double_eq(C.matrix[2][1], -2);
ck_assert_double_eq(C.matrix[2][2], 4);
s21_remove_matrix(&A);
s21_remove_matrix(&C);